name: Import docs from SunShare-Connect-Initiative-

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *' # daily at 06:00 UTC

permissions:
  contents: write

concurrency:
  group: sync-docs-sunshare-connect
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      # Source repo/branch and paths
      SRC_REPO: justindbilyeu/SunShare-Connect-Initiative-
      SRC_REF: main
      SRC_DIR: docs

      # Destination subfolder inside eMSSC-squared
      DEST_DIR: docs/SunShare-Connect-Initiative
    steps:
      - name: Checkout destination repo (eMSSC-squared)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout source repo (SunShare-Connect-Initiative-) - sparse
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SRC_REPO }}
          ref: ${{ env.SRC_REF }}
          path: _src
          fetch-depth: 0
          # Only pull the docs/ folder from the source repo
          sparse-checkout: |
            ${{ env.SRC_DIR }}
          sparse-checkout-cone-mode: true
          token: ${{ secrets.GITHUB_TOKEN }}
          # If the source repo is PRIVATE, create a Fine-grained PAT with Read access
          # to that repo as secret: SRC_REPO_TOKEN and use:
          # token: ${{ secrets.SRC_REPO_TOKEN }}

      - name: Sync docs into destination subfolder
        run: |
          if [ ! -d "_src/${SRC_DIR}" ]; then
            echo "Source path _src/${SRC_DIR} not found. Nothing to sync."
            exit 0
          fi
          mkdir -p "${DEST_DIR}"
          rsync -av --delete --exclude='.git' "_src/${SRC_DIR}/" "${DEST_DIR}/"

      - name: Commit & push if changes
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore(docs): sync from ${SRC_REPO}/${SRC_DIR} (@ ${SRC_REF})"
          git push
