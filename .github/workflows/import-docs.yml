name: One-time import docs from another repo

on:
  workflow_dispatch:
    inputs:
      source_repo:
        description: "owner/repo to import from (e.g., justindbilyeu/SunShare-TriSource)"
        required: true
        default: "justindbilyeu/SunShare-TriSource"
      ref:
        description: "Branch, tag, or commit (leave blank for default branch)"
        required: false
        default: ""
      source_docs_path:
        description: "Path to docs folder in source repo"
        required: false
        default: "docs"
      dest_subdir:
        description: "Destination folder in this repo"
        required: false
        default: "imports/docs"

permissions:
  contents: write

jobs:
  import-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout destination repo (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clone source repo
        env:
          GH_READ_TOKEN: ${{ secrets.SOURCE_REPO_TOKEN }}  # Only needed if source is private
          SRC_REPO: ${{ inputs.source_repo }}
          REF: ${{ inputs.ref }}
          SRC_PATH: ${{ inputs.source_docs_path }}
          DEST_ROOT: ${{ inputs.dest_subdir }}
        shell: bash
        run: |
          set -euo pipefail

          SAFE="${SRC_REPO//\//-}"
          TMP="$RUNNER_TEMP/src-$SAFE"
          URL="https://github.com/$SRC_REPO.git"

          echo "==> Cloning $SRC_REPO ${REF:+@ $REF}"
          if [[ -n "${GH_READ_TOKEN:-}" ]]; then
            if [[ -n "$REF" ]]; then
              git -c http.extraheader="Authorization: Bearer $GH_READ_TOKEN" clone --depth 1 --branch "$REF" "$URL" "$TMP" || {
                echo "::warning title=Clone by branch failed::Falling back to fetching specific ref/commit"
                git -c http.extraheader="Authorization: Bearer $GH_READ_TOKEN" clone --depth 1 "$URL" "$TMP"
                git -C "$TMP" fetch --depth 1 origin "$REF":"tmpref"
                git -C "$TMP" checkout --detach "tmpref"
              }
            else
              git -c http.extraheader="Authorization: Bearer $GH_READ_TOKEN" clone --depth 1 "$URL" "$TMP"
            fi
          else
            if [[ -n "$REF" ]]; then
              git clone --depth 1 --branch "$REF" "$URL" "$TMP" || {
                echo "::warning title=Clone by branch failed::Falling back to fetching specific ref/commit"
                git clone --depth 1 "$URL" "$TMP"
                git -C "$TMP" fetch --depth 1 origin "$REF":"tmpref"
                git -C "$TMP" checkout --detach "tmpref"
              }
            else
              git clone --depth 1 "$URL" "$TMP"
            fi
          fi

          SRC_ABS="$TMP/$SRC_PATH"
          if [[ ! -d "$SRC_ABS" ]]; then
            echo "::error title=Docs path not found::$SRC_PATH not found in $SRC_REPO"
            echo "Repo root contents:"; ls -la "$TMP" || true
            exit 1
          fi

          DEST="$DEST_ROOT/$SAFE"
          echo "==> Copying $SRC_PATH to $DEST/"
          rm -rf "$DEST"
          mkdir -p "$DEST"
          shopt -s dotglob
          cp -a "$SRC_ABS"/. "$DEST"/
          shopt -u dotglob

      - name: Commit & push (if changed)
        env:
          SRC_REPO: ${{ inputs.source_repo }}
          REF: ${{ inputs.ref }}
          SRC_PATH: ${{ inputs.source_docs_path }}
          DEST_ROOT: ${{ inputs.dest_subdir }}
        shell: bash
        run: |
          set -e
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "One-time import of docs from ${SRC_REPO}${REF:+@$REF} (path: ${SRC_PATH})"
            git push
            echo "Committed changes."
          else
            echo "No changes detected."
          fi

      - name: Summary
        run: |
          echo "## Imported docs" >> "$GITHUB_STEP_SUMMARY"
          echo "- Source: \`${{ inputs.source_repo }}\` (ref: \`${{ inputs.ref || 'default branch' }}\`, path: \`${{ inputs.source_docs_path }}\`)" >> "$GITHUB_STEP_SUMMARY"
          echo "- Destination: \`${{ inputs.dest_subdir }}/${{ replace(inputs.source_repo, '/', '-') }}/\`" >> "$GITHUB_STEP_SUMMARY"

After this repo is merged: To import docs from the next repository, re-run the same workflow with source_repo set to the next repo (e.g., justindbilyeu/SunShare-Connect-Initiative- or justindbilyeu/eMSSC2).
